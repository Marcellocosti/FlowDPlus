# global info (do not change)
axes: {InvMass: 0,
       Pt: 1,
       cent: 2,
       sp: 3,
       bdt_bkg: 4,
       bdt_sig: 5}

axes_RecoPrompt: {InvMass: 0,
       Pt: 1,
       cent: 2,
       sp: 3,
       bkg_score: 2,
       sgn_score: 4}

axes_RecoFD: {InvMass: 0,
       Pt: 1,
       cent: 2,
       sp: 3,
       bkg_score: 4,
       sgn_score: 6}

axes_GenPrompt: {InvMass: 0,
       Pt: 1,
       cent: 2,
       sp: 3,
       bkg_score: 2,
       sgn_score: 4}

axes_GenFD: {InvMass: 0,
       Pt: 1,
       cent: 2,
       sp: 3,
       bkg_score: 2,
       sgn_score: 4}

harmonic: 2 # 2: v2, 3: v3, etc.
flow_filename: '/data/shared/DplFlowML/outflow/Data/Train308280/AnalysisResults_HF_LHC23zzh_pass4_medium_2P3PDstar_2050_chi2pca.root'

# pt bins
ptmins: [
       #     1.0,
           2.0,
           3.0,
         #   4.0,
         #   5.0,
         #   6.0,
         #   7.0,
         #   8.0,
         #   10.0,
         #   12.0,
         #   16.0
       ]
ptmaxs: [
       #     2.0,
           3.0,
           4.0,
         #   5.0,
         #   6.0,
         #   7.0,
         #   8.0,
         #   10.0,
         #   12.0,
         #   16.0,
         #   24.0
       ]

# inv_mass_bins (one for each pt bin)
inv_mass_bins: [ 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05],
                 [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
                 [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05], 
              #    [1.70,1.75,1.80,1.82,1.83,1.84,1.85,1.86,1.87,1.88,1.89,1.90,1.91,1.92,1.95,2.0,2.05],
]
use_inv_mass_bins: false # use binning in invariant mass distribution, neglects inv_mass_bins (default: false)


# bdt cut
apply_btd_cuts: false # apply bdt cuts
bkg_ml_cuts: [0.08, 0.08, 0.08, 0.08, 0.08, 0.08] # max probability for bkg, one for each pt bin
sig_ml_cuts: [0.004, 0.004, 0.004, 0.004, 0.004, 0.004]       # min probability for sig, one for each pt bin

# cut variation
cut_variation:
       bdt_cut: {
              bkg: { 
                     min: [0.05, 0.05],
                     max: [0.20, 0.20],
                     step: [0.05, 0.05]
                       },
              sig: { 
                     min: [0.05, 0.05],
                     max: [0.15, 0.15],
                     step: [0.05, 0.05]
                       },
       }
       # please just make sure that the nCutSets is the same as the number of the min to max+step


# ep/sp subevents
detA: 'FT0c'
detB: 'FT0a'
detC: 'TPCpos'

# fit options
Dmeson: 'Dplus'
br: 0.0938 # branching ratio
FixSigma: [
       #     1,
           1,
           1,
       #     1,
       #     1,
       #     1,
       #     1,
       #     1,
       #     1,
       #     1,
       #     1
          ] #,1,1,1,1,1,1,1,1,1,] 
SigmaFile: ''
SigmaMultFactor: 1.
FixMean: [
       #    0,
          0,
          0,
       #    0,
       #    0,
       #    0,
       #    0,
       #    0,
       #    0,
       #    0,
       #    0
         ] #,0,0,0,0,0,0,0,0,0,]
NSigma4SB: [
       #      4,
            4,
            4,
       #      1,
       #      4,
       #      4,
       #      4,
       #      4,
       #      4,
       #      4,
       #      1
           ] #,4,4,4,4,4,4,4,4,4,]
MeanFile: ''
MassMin: [1.80, 1.70, 1.70, 1.70, 1.70, 1.75, 1.75, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70, 1.70]
MassMax: [1.95, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04, 2.04]
Rebin: [
       #  1,
        1,
        1,
       #  1,
       #  1,
       #  1,
       #  1,
       #  1,
       #  1,
       #  1,
       #  2
       ] #, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6]
InclSecPeak: [
              # 0,
              0,
              0,
              # 0,
              # 0,
              # 0,
              # 0,
              # 0,
              # 0,
              # 0,
              # 0
             ] #, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
Sigma: [
       #  0.012,
        0.012,
        0.012,
       #  0.020,
       #  0.020,
       #  0.020,
       #  0.020,
       #  0.020,
       #  0.020,
       #  0.020,
       #  0.020
       ] #, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]
SigmaSecPeak: [
              #  0.008,
               0.008,
               0.008,
              #  0.008,
              #  0.008,
              #  0.008,
              #  0.008,
              #  0.008,
              #  0.008,
              #  0.008,
              #  0.008
              ] #, 0.008, 0.008, 0.008]
SigmaFileSecPeak: ''
SigmaMultFactorSecPeak: 1.
FixSigmaToFirstPeak: 0
UseLikelihood: 1
BkgFunc: [ 
       #     'kExpo', 
           'kExpo', 
           'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo', 
       #     'kExpo'
         ] #, 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo', 'kExpo']
SgnFunc: [
       #    'kGaus', 
          'kGaus', 
          'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus', 
       #    'kGaus'
       ] #, 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus', 'kGaus' ]
BkgFuncVn: [
       #      'kPol2', 
            'kPol2', 
            'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2', 
       #      'kPol2'
           ] #, 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2', 'kPol2' ]

FixSigmaRatio: 0 # used only if SgnFunc = kGausSigmaRatioPar
SigmaRatioFile: ""
BoundMean: 0 # 0: Do not set limits on mean range, 1: the mean is set to be between MassMin[i] and MassMax[i]
InclRefl: false
ReflFile: ''
ReflFunc: ''

# efficiency
eff_filename: '/home/mdicosta/flowDplus/eff/AnalysisResults_mc_eff.root'

# these configurations are available only for the MC
#_______________________________________________________________________________________________________________________
## axes for the MC from Dtask
### for D0: mass-2 pt-3 bdt_bkg-0 bdt_prompt-6 bdt_nonprompt-1
axes_mc: {mass: 3,
              pt: 4,
              bdt_bkg: 0,
              bdt_sig: 1}

#_______________________________________________________________________________________________________________________
## used for the MC in projection_thnsparse.py
### for D0, D+, Ds
MC_filename: /home/mdicosta/flowDplus/eff/AnalysisResults_mc_eff.root
dirname: hf-task-dplus
# sparsenameAll: null
# sparsenamePrompt: hSparseMassPrompt
# sparsenameFD: hSparseMassFD
# sparsenameGenPrompt: hSparseMassGenPrompt
# sparsenameGenFD: hSparseMassGenFD

### ptweight
ptweightPath: ''
ptweightName: ''
ptweightBPath: ''
ptweightBName: ''

#TH2nameGenPrompt
## used for compute_frac_cut_var.py 
histoNameRaw: hRawYieldsTrueSimFit # also ComputeV2vsFDFrac.py
histoNameEffPrompt: hEffPrompt
histoNameEffFD: hEffFD

minimisation:
    correlated: true # true --> fully correlated, false --> fully uncorrelated
    doRawYieldSmearing: false # whether to smear the yields with a poissonian error
    setseed: false # set the seed for Poissonian smearing
    applyEffVariation:
        enable: false
        relvariation: 0.05
        option: decreasing # available options: [upshift, downshift, decreasing, increasing]
        prompt: true
        feeddown: true

linearplot: 
    enable: true #enable linear plots NpromptVsNFD
    uncbands: false #enable upper/lower linear plots limits
    outfileformat: ['png', 'pdf', 'jpg'] # linear plot saved in different output formats (e.g. png, pdf, etc.). Plots are already saved in the ouput TFile

## used for ComputeV2vsFDFrac.py
histoNameV2: hvnSimFit
graphNameV2: gvnSimFit
histoNameFracFD: hFDFrac
histoNameFracPrompt: hPromptFrac